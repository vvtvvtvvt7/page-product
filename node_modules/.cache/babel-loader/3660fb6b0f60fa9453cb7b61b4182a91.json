{"ast":null,"code":"import _slicedToArray from \"/home/vladimir/react/page-product/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/vladimir/react/page-product/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"/home/vladimir/react/page-product/src/counter/counter.stories.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React, {useState} from \\\"react\\\";\\nimport Counter from \\\"./counter\\\";\\n\\nexport default {\\n    title: 'Счётчик (Counter)',\\n}\\n\\nconst Template = (args) => <Counter {...args} />;\\n\\nexport const defaultCounter  = Template.bind({});\\n\\ndefaultCounter.argTypes = { onChange: { action: 'change' } }\\n\\ndefaultCounter.args = {\\n    className: 'css-class',\\n    value: 5,\\n    minValue: 0,\\n}\\n\\nconst TemplateWorkCounter = (args) => {\\n  const [value, setValue] = useState(args.value || 0);\\n  return <Counter {...args} value={value} onChange={setValue} />\\n};\\n\\nexport const WorkCounter  = TemplateWorkCounter.bind({});\\n\\nWorkCounter.argTypes = { onChange: { action: 'change' } }\\n\\nWorkCounter.args = {\\n    value: 5,\\n    minValue: 0,\\n}\\n\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"defaultCounter\": {\n    \"startLoc\": {\n      \"col\": 17,\n      \"line\": 8\n    },\n    \"endLoc\": {\n      \"col\": 48,\n      \"line\": 8\n    },\n    \"startBody\": {\n      \"col\": 17,\n      \"line\": 8\n    },\n    \"endBody\": {\n      \"col\": 48,\n      \"line\": 8\n    }\n  },\n  \"WorkCounter\": {\n    \"startLoc\": {\n      \"col\": 28,\n      \"line\": 20\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 23\n    },\n    \"startBody\": {\n      \"col\": 28,\n      \"line\": 20\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 23\n    }\n  }\n};\nimport React, { useState } from \"react\";\nimport Counter from \"./counter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Счётчик (Counter)'\n};\n\nvar Template = function Template(args) {\n  return /*#__PURE__*/_jsxDEV(Counter, _objectSpread({}, args), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 28\n  }, _this);\n};\n\n_c = Template;\nexport var defaultCounter = Template.bind({});\n;\ndefaultCounter.argTypes = {\n  onChange: {\n    action: 'change'\n  }\n};\ndefaultCounter.args = {\n  className: 'css-class',\n  value: 5,\n  minValue: 0\n};\n\nvar TemplateWorkCounter = function TemplateWorkCounter(args) {\n  _s();\n\n  var _useState = useState(args.value || 0),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(Counter, _objectSpread(_objectSpread({}, args), {}, {\n    value: value,\n    onChange: setValue\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(TemplateWorkCounter, \"X4v27RHHih38FOSjX7pdsDNrYFg=\");\n\n_c2 = TemplateWorkCounter;\nexport var WorkCounter = TemplateWorkCounter.bind({});\nWorkCounter.argTypes = {\n  onChange: {\n    action: 'change'\n  }\n};\nWorkCounter.args = {\n  value: 5,\n  minValue: 0\n};\ndefaultCounter.parameters = _objectSpread({\n  storySource: {\n    source: \"(args) => <Counter {...args} />\"\n  }\n}, defaultCounter.parameters);\nWorkCounter.parameters = _objectSpread({\n  storySource: {\n    source: \"(args) => {\\n  const [value, setValue] = useState(args.value || 0);\\n  return <Counter {...args} value={value} onChange={setValue} />\\n}\"\n  }\n}, WorkCounter.parameters);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Template\");\n$RefreshReg$(_c2, \"TemplateWorkCounter\");","map":{"version":3,"sources":["/home/vladimir/react/page-product/src/counter/counter.stories.jsx"],"names":["__STORY__","__LOCATIONS_MAP__","React","useState","Counter","title","Template","args","defaultCounter","bind","argTypes","onChange","action","className","value","minValue","TemplateWorkCounter","setValue","WorkCounter","parameters","storySource","source"],"mappings":";;;;;;;AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,6uBAAhB,C,CACA;;AACA,IAAIC,iBAAiB,GAAG;AAAC,oBAAiB;AAAC,gBAAW;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAZ;AAAgC,cAAS;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAzC;AAA6D,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAzE;AAA6F,eAAU;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB;AAAvG,GAAlB;AAA8I,iBAAc;AAAC,gBAAW;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAZ;AAAiC,cAAS;AAAC,aAAM,CAAP;AAAS,cAAO;AAAhB,KAA1C;AAA8D,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA1E;AAA+F,eAAU;AAAC,aAAM,CAAP;AAAS,cAAO;AAAhB;AAAzG;AAA5J,CAAxB;AAEJ,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe;AACXC,EAAAA,KAAK,EAAE;AADI,CAAf;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD;AAAA,sBAAU,QAAC,OAAD,oBAAaA,IAAb;AAAA;AAAA;AAAA;AAAA,WAAV;AAAA,CAAjB;;KAAMD,Q;AAEN,OAAO,IAAME,cAAc,GAAIF,QAAQ,CAACG,IAAT,CAAc,EAAd,CAAxB;AAA0C;AAEjDD,cAAc,CAACE,QAAf,GAA0B;AAAEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV;AAAZ,CAA1B;AAEAJ,cAAc,CAACD,IAAf,GAAsB;AAClBM,EAAAA,SAAS,EAAE,WADO;AAElBC,EAAAA,KAAK,EAAE,CAFW;AAGlBC,EAAAA,QAAQ,EAAE;AAHQ,CAAtB;;AAMA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACT,IAAD,EAAU;AAAA;;AACpC,kBAA0BJ,QAAQ,CAACI,IAAI,CAACO,KAAL,IAAc,CAAf,CAAlC;AAAA;AAAA,MAAOA,KAAP;AAAA,MAAcG,QAAd;;AACA,sBAAO,QAAC,OAAD,kCAAaV,IAAb;AAAmB,IAAA,KAAK,EAAEO,KAA1B;AAAiC,IAAA,QAAQ,EAAEG;AAA3C;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAHD;;GAAMD,mB;;MAAAA,mB;AAKN,OAAO,IAAME,WAAW,GAAIF,mBAAmB,CAACP,IAApB,CAAyB,EAAzB,CAArB;AAEPS,WAAW,CAACR,QAAZ,GAAuB;AAAEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV;AAAZ,CAAvB;AAEAM,WAAW,CAACX,IAAZ,GAAmB;AACfO,EAAAA,KAAK,EAAE,CADQ;AAEfC,EAAAA,QAAQ,EAAE;AAFK,CAAnB;AAOAP,cAAc,CAACW,UAAf;AAA8BC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV;AAA3C,GAA6Fb,cAAc,CAACW,UAA5G;AACAD,WAAW,CAACC,UAAZ;AAA2BC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV;AAAxC,GAAmMH,WAAW,CAACC,UAA/M","sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, {useState} from \\\"react\\\";\\nimport Counter from \\\"./counter\\\";\\n\\nexport default {\\n    title: 'Счётчик (Counter)',\\n}\\n\\nconst Template = (args) => <Counter {...args} />;\\n\\nexport const defaultCounter  = Template.bind({});\\n\\ndefaultCounter.argTypes = { onChange: { action: 'change' } }\\n\\ndefaultCounter.args = {\\n    className: 'css-class',\\n    value: 5,\\n    minValue: 0,\\n}\\n\\nconst TemplateWorkCounter = (args) => {\\n  const [value, setValue] = useState(args.value || 0);\\n  return <Counter {...args} value={value} onChange={setValue} />\\n};\\n\\nexport const WorkCounter  = TemplateWorkCounter.bind({});\\n\\nWorkCounter.argTypes = { onChange: { action: 'change' } }\\n\\nWorkCounter.args = {\\n    value: 5,\\n    minValue: 0,\\n}\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"defaultCounter\":{\"startLoc\":{\"col\":17,\"line\":8},\"endLoc\":{\"col\":48,\"line\":8},\"startBody\":{\"col\":17,\"line\":8},\"endBody\":{\"col\":48,\"line\":8}},\"WorkCounter\":{\"startLoc\":{\"col\":28,\"line\":20},\"endLoc\":{\"col\":1,\"line\":23},\"startBody\":{\"col\":28,\"line\":20},\"endBody\":{\"col\":1,\"line\":23}}};\n    \nimport React, {useState} from \"react\";\nimport Counter from \"./counter\";\n\nexport default {\n    title: 'Счётчик (Counter)',\n}\n\nconst Template = (args) => <Counter {...args} />;\n\nexport const defaultCounter  = Template.bind({});;\n\ndefaultCounter.argTypes = { onChange: { action: 'change' } }\n\ndefaultCounter.args = {\n    className: 'css-class',\n    value: 5,\n    minValue: 0,\n}\n\nconst TemplateWorkCounter = (args) => {\n  const [value, setValue] = useState(args.value || 0);\n  return <Counter {...args} value={value} onChange={setValue} />\n};\n\nexport const WorkCounter  = TemplateWorkCounter.bind({});\n\nWorkCounter.argTypes = { onChange: { action: 'change' } }\n\nWorkCounter.args = {\n    value: 5,\n    minValue: 0,\n}\n\n\n\ndefaultCounter.parameters = { storySource: { source: \"(args) => <Counter {...args} />\" }, ...defaultCounter.parameters };\nWorkCounter.parameters = { storySource: { source: \"(args) => {\\n  const [value, setValue] = useState(args.value || 0);\\n  return <Counter {...args} value={value} onChange={setValue} />\\n}\" }, ...WorkCounter.parameters };"]},"metadata":{},"sourceType":"module"}